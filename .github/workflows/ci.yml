name: CI-Security-Pipeline

on:
  push:
    branches: [ "main", "develop" ]
    paths:
      - '**.py'
      - 'requirements.txt'
      - '.github/workflows/ci.yml'
  pull_request:
    branches: [ "main", "develop" ]
  workflow_dispatch:

jobs:
  security:
    name: SAST + SCA
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install project dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # -------------------- SAST: Bandit --------------------
      - name: Install Bandit
        run: pip install bandit

      - name: Run Bandit SAST Scan
        run: |
          bandit -r . -f json -o bandit.json --exit-zero

      - name: Upload Bandit Report as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: bandit-sast-report
          path: bandit.json
          retention-days: 30

      # -------------------- SCA: OWASP Dependency-Check --------------------
      - name: Download OWASP Dependency-Check
        run: |
          curl -Lo dependency-check.zip https://github.com/jeremylong/DependencyCheck/releases/latest/download/dependency-check-8.4.0-release.zip
          unzip dependency-check.zip
          chmod +x dependency-check/bin/dependency-check.sh

      - name: Run OWASP Dependency-Check SCA Scan
        run: |
          ./dependency-check/bin/dependency-check.sh \
            --project "Your Flask App" \
            --scan . \
            --out reports/ \
            --format JSON \
            --format HTML \
            --failOnCVSS 7

      - name: Upload OWASP Dependency-Check Reports
        uses: actions/upload-artifact@v4
        with:
          name: owasp-dependency-check-reports
          path: reports/
          retention-days: 30

      - name: Run Safety SCA Scan
        run: |
          pip install safety
          safety check --full-report --json > safety_report.json || true
        continue-on-error: true

      - name: Upload Safety Report
        uses: actions/upload-artifact@v4
        with:
          name: safety-sca-report
          path: safety_report.json